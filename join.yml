- hosts: k8snode
  gather_facts: no
  remote_user: root
  vars:
    hosts: "{{ groups['k8smaster'] | map('extract', hostvars, ['ansible_host']) | list }}"
    names: "{{ groups['k8smaster'] }}"
  tasks:
    - name: Disable swap & selinux
      shell: "{{ item }}"
      with_items:
        - swapoff -a || true
        - setenforce 0 || true
        - sed -i /^[^#]*swap*/s/^/\#/g /etc/fstab
        - sed -i 's/=enforcing/=disabled/g' /etc/selinux/config
      when: inventory_hostname not in exist_node

    - name: Disable firewall & postfix services
      service: "name={{ item }} state=stopped enabled=no"
      with_items:
        - firewalld
        - postfix
      when: inventory_hostname not in exist_node

    - name: Enable IPVS Module
      shell: |
        modprobe ip_vs_rr
        modprobe br_netfilter
        modprobe -- ip_vs
        modprobe -- ip_vs_rr
        modprobe -- ip_vs_wrr
        modprobe -- ip_vs_sh
        if [[ $(uname -r |cut -d . -f1) -ge 4 ]]; then
          modprobe -- nf_conntrack
        else
          modprobe -- nf_conntrack_ipv4
        fi
      when: inventory_hostname not in exist_node

    - name: Setup Hosts
      shell:
        cmd: |
          cat <<EOF > /etc/hosts
          127.0.0.1   localhost localhost.localdomain localhost4 localhost4.localdomain4
          ::1         localhost localhost.localdomain localhost6 localhost6.localdomain6
          {% for i in range (0, names | count) %}
          {{ hosts[i] }} {{ names[i] }}
          {% endfor %}
          EOF
      when: inventory_hostname not in exist_node

    - name: Setup hostname
      command: hostnamectl set-hostname {{ inventory_hostname }}
      when: inventory_hostname not in exist_node

    - name: Install epel-release
      yum: name=epel-release state=installed
      when: inventory_hostname not in exist_node

    - name: Install basic tool package
      yum:
        state: installed
        name:
          - nc
          - nmap
          - telnet
          - iftop
          - iotop
          - qperf
          - traceroute
          - sysstat
          - lsof
          - ntpdate
          - ntp
          - ipvsadm
          - ipset
          - git
          - wget
          - curl
          - unzip
          - psmisc
          - systemd
          - rsync
          - yum-utils
          - device-mapper-persistent-data
          - lvm2
      when: inventory_hostname not in exist_node

    - name: Setting timezone
      command: "{{ item }}"
      with_items:
        - timedatectl set-timezone Asia/Shanghai
        - timedatectl set-local-rtc 0
      when: inventory_hostname not in exist_node

    - name: Restart rsyslog & crond service
      service: "name={{ item }} state=restarted"
      with_items:
        - rsyslog
        - crond
      when: inventory_hostname not in exist_node

    - name: Add Docker Repository Info
      command: "{{ item }}"
      with_items:
        - yum-config-manager --add-repo http://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo
        - yum makecache fast
      when: inventory_hostname not in exist_node

    - name: Install Docker Service
      yum: name=docker-ce state=installed
      when: inventory_hostname not in exist_node

    - name: Create Docker Config Directory
      file: path=/etc/docker state=directory
      when: inventory_hostname not in exist_node

    - name: Setting Docker Config
      shell:
        cmd: |
          cat <<EOF > /etc/docker/daemon.json
          {
            "registry-mirrors": ["https://91abmaa0.mirror.aliyuncs.com"],
            "log-driver": "json-file",
            "log-opts": {
              "max-size": "2m",
              "max-file": "5"
            },
            "exec-opts": ["native.cgroupdriver=systemd"],
            "storage-driver": "overlay2",
            "storage-opts": [
              "overlay2.override_kernel_check=true"
            ]
          }
          EOF
      when: inventory_hostname not in exist_node

    - name: Start Docker Service
      systemd: name=docker state=started daemon_reload=yes enabled=yes
      when: inventory_hostname not in exist_node

    - name: Setting limits Config
      shell:
        cmd: |
          cat <<EOF > /etc/security/limits.conf
          * soft nproc 65536
          * hard nproc 65536
          * soft nofile 102400
          * hard nofile 102400
          * soft memlock unlimited
          * hard memlock unlimited
          EOF
      when: inventory_hostname not in exist_node

    - name: Setting Sysctl Config
      shell:
        cmd: |
          cat <<EOF > /etc/sysctl.conf
          net.bridge.bridge-nf-call-ip6tables = 1
          net.bridge.bridge-nf-call-iptables = 1
          net.ipv4.ip_forward = 1
          fs.inotify.max_user_instances = 524288
          fs.inotify.max_user_watches = 524288
          vm.swappiness = 0
          fs.file-max = 52706963
          fs.nr_open = 52706963
          net.ipv4.tcp_keepalive_time = 600
          net.ipv4.tcp_keepalive_intvl = 30
          net.ipv4.tcp_keepalive_probes = 10
          net.core.somaxconn=65535
          net.core.netdev_max_backlog=10000
          net.netfilter.nf_conntrack_max=10485760
          net.netfilter.nf_conntrack_tcp_timeout_established=300
          net.ipv4.tcp_max_tw_buckets = 18000
          net.ipv4.tcp_fin_timeout = 30
          net.ipv4.tcp_syncookies = 1
          net.ipv4.tcp_tw_reuse = 1
          net.ipv4.tcp_tw_recycle = 1
          net.ipv4.tcp_no_metrics_save = 1
          net.unix.max_dgram_qlen = 1024
          EOF
      when: inventory_hostname not in exist_node

    - name: Refresh Sysctl
      shell: "{{ item }}"
      with_items:
        - sysctl -p
        - echo 262144 | tee /sys/module/nf_conntrack/parameters/hashsize
      when: inventory_hostname not in exist_node

    - name: Setting K8s Resitory
      shell:
        cmd: |
          cat <<EOF > /etc/yum.repos.d/kubernetes.repo
          [kubernetes]
          name=Kubernetes
          baseurl=https://mirrors.aliyun.com/kubernetes/yum/repos/kubernetes-el7-x86_64
          enabled=1
          gpgcheck=1
          repo_gpgcheck=1
          gpgkey=https://mirrors.aliyun.com/kubernetes/yum/doc/yum-key.gpg https://mirrors.aliyun.com/kubernetes/yum/doc/rpm-package-key.gpg
          EOF
      when: inventory_hostname not in exist_node

    - name: Setup K8s
      command: yum install -y kubelet-{{ version }} kubeadm-{{ version }} kubectl-{{ version }}
      when: inventory_hostname not in exist_node

    - name: Setting K8s Args
      shell:
        cmd: |
          cat >/etc/sysconfig/kubelet<<EOF
          KUBELET_EXTRA_ARGS="--pod-infra-container-image=registry.aliyuncs.com/google_containers/pause-amd64:3.2"
          EOF
      when: inventory_hostname not in exist_node

    - name: Create Kubelet Service Directory
      file: path=/etc/systemd/system/kubelet.service.d state=directory
      when: inventory_hostname not in exist_node

    - name: Setting K8s Service
      shell:
        cmd: |
          cat > /etc/systemd/system/kubelet.service.d/10-kubeadm.conf <<EOF
          # Note: This dropin only works with kubeadm and kubelet v1.11+
          [Service]
          Environment="KUBELET_KUBECONFIG_ARGS=--bootstrap-kubeconfig=/etc/kubernetes/bootstrap-kubelet.conf --kubeconfig=/etc/kubernetes/kubelet.conf"
          Environment="KUBELET_CONFIG_ARGS=--config=/var/lib/kubelet/config.yaml --cgroup-driver=systemd"
          # This is a file that "kubeadm init" and "kubeadm join" generates at runtime, populating the KUBELET_KUBEADM_ARGS variable dynamically
          EnvironmentFile=-/var/lib/kubelet/kubeadm-flags.env
          # This is a file that the user can use for overrides of the kubelet args as a last resort. Preferably, the user should use
          # the .NodeRegistration.KubeletExtraArgs object in the configuration files instead. KUBELET_EXTRA_ARGS should be sourced from this file.
          EnvironmentFile=-/etc/sysconfig/kubelet
          ExecStart=
          ExecStart=/usr/bin/kubelet \$KUBELET_KUBECONFIG_ARGS \$KUBELET_CONFIG_ARGS \$KUBELET_KUBEADM_ARGS \$KUBELET_EXTRA_ARGS
          EOF
      when: inventory_hostname not in exist_node

    - name: Start Kubelet Service
      systemd: name=kubelet state=started daemon_reload=yes enabled=yes
      when: inventory_hostname not in exist_node

- hosts: k8smaster[0]
  gather_facts: no
  tasks:
    - name: Create k8s join token
      shell: kubeadm token create --print-join-command > /root/join.sh

- hosts: k8snode
  gather_facts: no
  vars:
    ansible_python_interpreter: "/usr/bin/python3"
    copy_node: "{{ groups['k8smaster'][0] }}"
  tasks:
    - name: Copy Join Command
      synchronize: src=/root/join.sh dest=/root/join.sh
      delegate_to: "{{ copy_node }}"
      when: inventory_hostname not in exist_node
    - name: Change file permissions
      file:
        path: /root/join.sh
        mode: '0755'
      when: inventory_hostname not in exist_node
    - name: Execute Join command
      script: /root/join.sh
      when: inventory_hostname not in exist_node
    - name: Delete join file
      file: path=/root/join.sh state=absent
      when: inventory_hostname not in exist_node

- hosts: k8smaster[0]
  gather_facts: no
  tasks:
    - name: Delete join file
      file: path=/root/join.sh state=absent